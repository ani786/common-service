plugins {
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'application'
	id 'checkstyle'
	id 'io.qameta.allure' version '2.8.1'
	id 'com.palantir.docker' version '0.25.0'
	id 'maven-publish'
	id 'org.sonarqube' version '3.0'
	id 'net.researchgate.release' version '2.8.1'
}

group = 'com.mycommonservref.api.common.commonservice'
version = '0.1.64'

java {
	sourceCompatibility(JavaVersion.VERSION_15)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
		allowInsecureProtocol = true
		url("http://nexus.ba-build.aws.trs:8081/repository/maven-central/")
		credentials {
			username System.getenv('bamboo_nexus_username')
			password System.getenv('bamboo_nexus_password')
		}
	}
}

ext {
	set('allureVersion', '2.13.2')
	set('jacksonDataBindVersion', '2.13.0-rc1')
	set('jacksonAnnotationsVersion', '2.13.0-rc1')
	set('jacksonCoreVersion', '2.13.0-rc1')
	set('springCloudVersion', "2020.0.4")
	set('jacksonXmlFormatVersion', '2.13.0-rc2')
}

dependencies {
	implementation 'org.springframework:spring-core:5.3.8'
	implementation 'org.springframework:spring-aop:5.3.8'
	implementation 'org.springframework:spring-jdbc:5.3.8'
	implementation 'org.springframework:spring-context:5.3.8'
	implementation 'org.springframework:spring-web:5.3.8'
	implementation 'jakarta.validation:jakarta.validation-api:2.0.2'
	implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDataBindVersion"
	implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonAnnotationsVersion"
	implementation "com.fasterxml.jackson.core:jackson-core:$jacksonCoreVersion"
	implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	implementation 'org.mockito:mockito-core:3.6.28'
	implementation 'org.mockito:mockito-junit-jupiter:3.6.28'
	implementation 'org.slf4j:slf4j-api:1.7.31'
	implementation 'org.slf4j:jul-to-slf4j:1.7.31'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.oracle.database.jdbc:ojdbc8:21.1.0.0'
	implementation 'org.hibernate:hibernate-core:5.4.25.Final'
	implementation 'org.springframework.data:spring-data-jpa:2.4.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'commons-io:commons-io:2.11.0'
	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonXmlFormatVersion"
	implementation 'io.github.openfeign:feign-httpclient'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	compileOnly 'javax.servlet:servlet-api:2.5'
	compileOnly 'com.amazonaws:aws-xray-recorder-sdk-spring:2.9.0'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework:spring-test:5.3.8'
	testImplementation 'org.projectlombok:lombok:1.18.20'
	testImplementation "io.qameta.allure:allure-junit5:${allureVersion}"
}

allure {
	autoconfigure = true
	version = '2.13.2'
	autoconfigure = true
	aspectjweaver = true
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	systemProperties = [
			'junit.jupiter.execution.parallel.enabled'             : 'true',
			'junit.jupiter.execution.parallel.mode.default'        : 'concurrent',
			'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent'
	]
	useJUnitPlatform {
		excludeTags 'integration', 'regression'
	}
	testLogging {
		events 'PASSED', 'FAILED', 'SKIPPED'
	}
}

task integrationTest(type: Test) {
	systemProperties = [
			'junit.jupiter.execution.parallel.enabled'             : 'true',
			'junit.jupiter.execution.parallel.mode.default'        : 'concurrent',
			'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent'
	]
	useJUnitPlatform {
		includeTags 'integration'
	}

	shouldRunAfter test
	testLogging {
		events 'PASSED', 'FAILED', 'SKIPPED'
	}
}

checkstyleMain {
	source = 'src/main/java'
}

checkstyleTest {
	source = 'src/test/java'
}

//add this to exclude the checkstyle from build task
checkstyle {
	toolVersion '8.42'
	//checkstyleTest.enabled = false
}

publishing {

	publications {
		binary(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			allowInsecureProtocol = true
			credentials {
				username System.getenv('bamboo_nexus_username')
				password System.getenv('bamboo_nexus_password')
			}
			url = System.getenv('bamboo_nexus_release_url')
		}
	}
}
